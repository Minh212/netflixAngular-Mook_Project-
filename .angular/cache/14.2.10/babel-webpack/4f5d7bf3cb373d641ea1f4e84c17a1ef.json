{"ast":null,"code":"import _asyncToGenerator from \"E:/Lessons/netflixAngular-Mook_Project-/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MovieDetailsComponent = class MovieDetailsComponent {\n  constructor(service, router, title, meta) {\n    this.service = service;\n    this.router = router;\n    this.title = title;\n    this.meta = meta;\n  }\n\n  ngOnInit() {\n    let getParamId = this.router.snapshot.paramMap.get('id');\n    console.log(getParamId, 'getparamid#');\n    this.getMovie(getParamId);\n    this.getVideo(getParamId);\n    this.getMovieCast(getParamId);\n    this.formModal = new window.bootstrap.Modal(document.getElementById(\"formModal\"));\n  }\n\n  openModal() {\n    this.formModal.show();\n  }\n\n  closeModal() {\n    this.formModal.hide();\n  }\n\n  getMovie(id) {\n    var _this = this;\n\n    this.service.getMovieDetails(id).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        console.log(result, 'getmoviedetails#');\n        _this.getMovieDetailResult = yield result; // updatetags\n\n        _this.title.setTitle(`${_this.getMovieDetailResult.original_title} | ${_this.getMovieDetailResult.tagline}`);\n\n        _this.meta.updateTag({\n          name: 'title',\n          content: _this.getMovieDetailResult.original_title\n        });\n\n        _this.meta.updateTag({\n          name: 'description',\n          content: _this.getMovieDetailResult.overview\n        }); // facebook\n\n\n        _this.meta.updateTag({\n          property: 'og:type',\n          content: \"website\"\n        });\n\n        _this.meta.updateTag({\n          property: 'og:url',\n          content: ``\n        });\n\n        _this.meta.updateTag({\n          property: 'og:title',\n          content: _this.getMovieDetailResult.original_title\n        });\n\n        _this.meta.updateTag({\n          property: 'og:description',\n          content: _this.getMovieDetailResult.overview\n        });\n\n        _this.meta.updateTag({\n          property: 'og:image',\n          content: `https://image.tmdb.org/t/p/original/${_this.getMovieDetailResult.backdrop_path}`\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  getVideo(id) {\n    this.service.getMovieVideo(id).subscribe(result => {\n      console.log(result, 'getMovieVideo#');\n      result.results.forEach(element => {\n        if (element.type == \"Trailer\") {\n          this.getMovieVideoResult = element.key;\n        }\n      });\n    });\n  }\n\n  getMovieCast(id) {\n    this.service.getMovieCast(id).subscribe(result => {\n      console.log(result, 'movieCast#');\n      this.getMovieCastResult = result.cast;\n    });\n  }\n\n};\nMovieDetailsComponent = __decorate([Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})], MovieDetailsComponent);\nexport { MovieDetailsComponent };","map":{"version":3,"mappings":"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","names":["Component","MovieDetailsComponent","constructor","service","router","title","meta","ngOnInit","getParamId","snapshot","paramMap","get","console","log","getMovie","getVideo","getMovieCast","formModal","window","bootstrap","Modal","document","getElementById","openModal","show","closeModal","hide","id","getMovieDetails","subscribe","result","getMovieDetailResult","setTitle","original_title","tagline","updateTag","name","content","overview","property","backdrop_path","getMovieVideo","results","forEach","element","type","getMovieVideoResult","key","getMovieCastResult","cast","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\Lessons\\netflixAngular-Mook_Project-\\src\\app\\pages\\movie-details\\movie-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MovieApiServiceService } from 'src/app/service/movie-api-service.service';\r\nimport { Title,Meta } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrls: ['./movie-details.component.css']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n  \r\n\r\n  constructor(private service:MovieApiServiceService,private router:ActivatedRoute,private title:Title,private meta:Meta) { }\r\n  getMovieDetailResult:any;\r\n  getMovieVideoResult:any;\r\n  getMovieCastResult:any;\r\n  formModal: any;\r\n  ngOnInit(): void {\r\n    let getParamId = this.router.snapshot.paramMap.get('id');\r\n    console.log(getParamId,'getparamid#');\r\n  \r\n    this.getMovie(getParamId);\r\n    this.getVideo(getParamId);\r\n    this.getMovieCast(getParamId);\r\n\r\n    this.formModal = new window.bootstrap.Modal(\r\n      document.getElementById(\"formModal\")\r\n    );\r\n  }\r\n\r\n  openModal() {\r\n    this.formModal.show();\r\n  }\r\n\r\n  closeModal() {\r\n    this.formModal.hide();\r\n  }\r\n\r\n\r\n  getMovie(id:any){\r\n    this.service.getMovieDetails(id).subscribe(async(result)=>{\r\n        console.log(result,'getmoviedetails#');\r\n        this.getMovieDetailResult = await result;\r\n\r\n        // updatetags\r\n        this.title.setTitle(`${this.getMovieDetailResult.original_title} | ${this.getMovieDetailResult.tagline}`);\r\n        this.meta.updateTag({name:'title',content:this.getMovieDetailResult.original_title});\r\n        this.meta.updateTag({name:'description',content:this.getMovieDetailResult.overview});\r\n     \r\n        // facebook\r\n        this.meta.updateTag({property:'og:type',content:\"website\"});\r\n        this.meta.updateTag({property:'og:url',content:``});\r\n        this.meta.updateTag({property:'og:title',content:this.getMovieDetailResult.original_title});\r\n        this.meta.updateTag({property:'og:description',content:this.getMovieDetailResult.overview});\r\n        this.meta.updateTag({property:'og:image',content:`https://image.tmdb.org/t/p/original/${this.getMovieDetailResult.backdrop_path}`});\r\n\r\n    });\r\n  }\r\n\r\n  getVideo(id:any)\r\n  {\r\n    this.service.getMovieVideo(id).subscribe((result)=>{\r\n        console.log(result,'getMovieVideo#');\r\n        result.results.forEach((element:any) => {\r\n            if(element.type==\"Trailer\")\r\n            {\r\n              this.getMovieVideoResult = element.key;\r\n            }\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  getMovieCast(id:any)\r\n  {\r\n    this.service.getMovieCast(id).subscribe((result)=>{\r\n      console.log(result,'movieCast#');\r\n      this.getMovieCastResult = result.cast;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}